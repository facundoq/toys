<?xml version="1.0" encoding="UTF-8"?>
<project name="simpledb" default="dist">
    <property name="src" location="src"/>
    <property name="testd" location="test"/>

    <property name="build" location="bin"/>
    <property name="build.src" location="${build}/src"/>
    <property name="build.test" location="${build}/test"/>
    <property name="depcache" location="${build}/depcache"/>

    <property name="lib" location="lib"/>
    <property name="doc" location="doc"/>
    <property name="dist" location="dist"/>
    <property name="jarfile" location="${dist}/${ant.project.name}.jar"/>
    <property name="compile.debug" value="true"/>
    <property name="test.reports" location="/tmp/${test.lab}/${test.user}"/>

    <path id="classpath.base">
        <pathelement location="${build.src}"/>
        <pathelement location="${lib}/zql.jar"/>
        <pathelement location="${lib}/jline-0.9.94.jar"/>
    </path>

    <path id="classpath.test">
        <path refid="classpath.base"/>
        <pathelement location="${build.test}"/>
        <pathelement location="${lib}/junit-4.5.jar"/>
    </path>

    <fileset id="junit.all" dir="${build.test}">
        <include name="**/*Test.class"/>
        <exclude name="**/*$*.class"/>
        <exclude name="simpledb/systemtest/*.class"/>
    </fileset>

    <!-- Common macro for compiling Java source -->
    <macrodef name="Compile">
        <attribute name="srcdir"/>
        <attribute name="destdir"/>
        <element name="compileoptions" implicit="true" optional="true"/>
        <sequential>
            <mkdir dir="@{destdir}"/>
            <!-- avoids needing ant clean when changing interfaces -->
            <depend srcdir="${srcdir}" destdir="${destdir}" cache="${depcache}"/>
            <javac srcdir="@{srcdir}" destdir="@{destdir}" includeAntRuntime="no"
                    debug="${compile.debug}" source="1.5">
                <compilerarg value="-Xlint:unchecked" />
                <!--<compilerarg value="-Xlint:deprecation" />-->
                <compileoptions/>
            </javac>
        </sequential>
    </macrodef>

    <!-- Common macro for running junit tests in both the test and runtest targets -->
    <macrodef name="RunJunit">
        <element name="testspecification" implicit="yes" />
        <sequential>
            <junit printsummary="on" fork="yes" haltonfailure="yes" maxmemory="128M">
                <classpath refid="classpath.test" />
                <formatter type="plain" usefile="false"/>
                <assertions><enable/></assertions>
                <testspecification/>
            </junit>
        </sequential>
    </macrodef>

    <target name="compile" description="Compile code">
        <Compile srcdir="${src}" destdir="${build.src}">
            <classpath refid="classpath.base"/>
        </Compile>
    </target>

    <target name="javadocs" description="Build javadoc documentation">
        <javadoc destdir="${doc}" access="private" failonerror="true">
            <classpath refid="classpath.base" />
            <fileset dir="src" defaultexcludes="yes">
                <include name="simpledb/**/*.java"/>
            </fileset>
        </javadoc>
    </target>

    <target name="dist" depends="compile" description="Build jar">
        <mkdir dir="${dist}"/>
        <jar jarfile="${jarfile}" basedir="${build.src}">
            <manifest>
                <attribute name="Main-Class" value="simpledb"/>
            </manifest>
            <!-- Merge library jars into final jar file -->
            <!--<zipgroupfileset refid="lib.jars"/>-->
        </jar>
    </target>

    <target name="clean" description="Remove build and dist directories">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${doc}"/>
    </target>

    <target name="testcompile" depends="compile" description="Compile all unit and system tests">
        <Compile srcdir="${testd}" destdir="${build.test}">
            <classpath refid="classpath.test"/>
        </Compile>
    </target>

    <target name="test" depends="testcompile" description="Run all unit tests">
        <RunJunit>
            <batchtest>
                <fileset refid="junit.all"/>
            </batchtest>
        </RunJunit>
    </target>

    <target name="systemtest" depends="testcompile" description="Run all system tests">
        <RunJunit>
            <batchtest>
                <fileset dir="${build.test}">
                    <include name="simpledb/systemtest/*Test.class"/>
                </fileset>
            </batchtest>
        </RunJunit>
    </target>

    <target name="runtest" depends="testcompile"
            description="Runs the test you specify on the command line with -Dtest=">
        <!-- Check for -Dtest command line argument -->
        <fail unless="test" message="You must run this target with -Dtest=TestName"/>

        <!-- Check if the class exists -->
        <available property="test.exists" classname="simpledb.${test}">
                <classpath refid="classpath.test" />
        </available>
        <fail unless="test.exists" message="Test ${test} could not be found"/>

        <RunJunit>
            <test name="simpledb.${test}"/>
        </RunJunit>
    </target>

    <target name="runsystest" depends="testcompile"
            description="Runs the system test you specify on the command line with -Dtest=">
        <!-- Check for -Dtest command line argument -->
        <fail unless="test" message="You must run this target with -Dtest=TestName"/>

        <!-- Check if the class exists -->
        <available property="test.exists" classname="simpledb.systemtest.${test}">
                <classpath refid="classpath.test" />
        </available>
        <fail unless="test.exists" message="Test ${test} could not be found"/>

        <RunJunit>
            <test name="simpledb.systemtest.${test}"/>
        </RunJunit>
    </target>

    <!-- The following target is used for automated grading. -->
    <target name="test-report" depends="compile"
            description="Generates HTML test reports in ${test.reports}">
        <fail unless="test.user" message="You must run this target with -Dtest.user=username"/>
        <fail unless="test.lab" message="You must run this target with e.g. -Dtest.lab=lab1"/>
        <mkdir dir="${test.reports}"/>

        <RunJunit>
            <formatter type="xml"/>
            <formatter type="plain" usefile="true"/>
            <batchtest todir="${test.reports}" >
                <fileset refid="junit.all"/>
            </batchtest>
        </RunJunit>

        <junitreport todir="${test.reports}">
            <fileset dir="${test.reports}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${test.reports}" />
        </junitreport>
    </target>

</project>
